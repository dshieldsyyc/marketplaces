{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location needs to be provided"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet Name needs to be provided"
            }
        },
		"virtualNetworkNewOrExisting": {
			"type": "string",
			"defaultValue": "new",
			"metadata": {
				"description": "Determines whether or not a new virtual network should be provisioned."
			}
		},
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network"
            }
        },
        "addressPrefixes": {
            "type": "array",
            "defaultValue": [
                "10.0.0.0/16"
            ],
            "metadata": {
                "description": "Addresses of the Virtual Machine."
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnets for the virtual network"
            }
        },
		"publicIpNewOrExisting": {
			"type": "string",
			"defaultValue": "new",
			"metadata": {
				"description": "Determines whether or not a new public ip should be provisioned."
			}
		},
        "publicIpAddressName": {
            "type": "string",
            "defaultValue": "orionlogmanagerserver-ip",
            "metadata": {
                "description": "Public IP Address Name for the VM"
            }
        },
		"publicIpDns": {
			"type": "string",
			"defaultValue": "[concat('olmserver-', uniqueString(resourceGroup().id))]",
			"metadata": {
				"description": "DNS of the public ip address for the VM"
			}
		},
		"publicIpResourceGroupName": {
			"type": "string",
			"defaultValue": "[resourceGroup().name]",
			"metadata": {
				"description": "Name of the resource group for the public ip address"
			}
		},
        "publicIpAddressType": {
            "type": "string",
            "defaultValue": "Dynamic",
            "metadata": {
                "description": "Public IP Address Type for the VM"
            }
        },
        "publicIpAddressSku": {
            "type": "string",
            "defaultValue": "Basic",
            "metadata": {
                "description": "Public IP Address Sku for the VM"
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "olmserver",
            "metadata": {
                "description": "The name of the Virtual Machine."
            }
        },
        "virtualMachineRG": {
            "type": "string",
            "metadata": {
                "description": "Resource Group of the Virtual Machine."
            }
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "metadata": {
                "description": "You can choose between Azure managed disks types to support your workload or scenario. Learn more about managed disk types."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS12_v2",
            "metadata": {
                "description": "The size of virtual machine to provision for the application."
            }
        },
        "image": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "metadata": {
                "description": "The OS version of virtual machine to provision for the VM."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Provide admin username for the virtual machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Provide admin password for the virtual machine"
            }
        },
		"dbServerName": {
            "type": "string",
            "defaultValue": "orionserver",
            "metadata": {
                "description": "Provide server name for the azure sql"
            }
        },
		"databaseName": {
            "type": "string",
            "defaultValue": "oriondb",
            "metadata": {
                "description": "Provide database name for the azure sql"
            }
        },
		"dbUserName": {
            "type": "string",
            "defaultValue": "sa",
            "metadata": {
                "description": "Provide user name for the azure sql"
            }
        },
		"dbPassword": {
            "type": "string",
            "defaultValue": "pwd",
            "metadata": {
                "description": "Provide password for the azure sql"
            }
        },	
        "olmServerName": {
            "type": "string",
            "defaultValue": "olmserver",
            "metadata": {
                "description": "Provide server name for the azure sql"
            }
        },
		"olmDatabaseName": {
            "type": "string",
            "defaultValue": "olmdb",
            "metadata": {
                "description": "Provide database name for the azure sql"
            }
        },
		"olmUserName": {
            "type": "string",
            "defaultValue": "sa",
            "metadata": {
                "description": "Provide user name for the azure sql"
            }
        },
		"olmPassword": {
            "type": "string",
            "defaultValue": "pwd",
            "metadata": {
                "description": "Provide password for the azure sql"
            }
        },	
		"isStandard": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Provide installation type"
            }
        },
		"windowsLicenseType": {
            "type": "string",
            "defaultValue": "no",
            "metadata": {
                "description": "Provide license type"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "[deployment().properties.templateLink.uri]",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }          
         },
         "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        }
    },
    "variables": {		
		"silentConfigName" : "[if(equals(parameters('isStandard'), bool('true')), 'config/standard.xml', 'config/express.xml')]",
		"silentConfigUri": "[uri(parameters('_artifactsLocation'), concat(variables('silentConfigName'), parameters('_artifactsLocationSasToken')))]",
				
        "scriptFileUri": "[uri(parameters('_artifactsLocation'), concat('installation_script.ps1', parameters('_artifactsLocationSasToken')))]",
		"publicIpAddressId": {
			"id": "[resourceId(parameters('publicIpResourceGroupName'), 'Microsoft.Network/publicIPAddresses', parameters('publicIpAddressName'))]"
        },
        
        "networkInterfaceName": "[concat(parameters('virtualMachineName'),'-nic')]",
		"networkSecurityGroupName": "[concat(parameters('virtualMachineName'),'-nsg')]",
        "nsgId": "[resourceId(parameters('virtualMachineRG'), 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "subnetRef": "[resourceId(parameters('virtualMachineRG'),'Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"		
    },
    "resources": [
		{ 
			"apiVersion": "2018-05-01",
			"name": "pid-1a25ce3f-5e14-5bd8-8e9b-70b7933b7ab4", 
			"type": "Microsoft.Resources/deployments",
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"resources": []
				}
			}
		},
        {
            "name": "[variables('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": "[if(not(equals(parameters('publicIpNewOrExisting'), 'none')), variables('publicIpAddressId') , json('null'))]"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "name": "[variables('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                {
                    "name": "HTTP80",
                    "properties": {
                        "priority": 1010,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "80"
                    }
                },
                {
                    "name": "HTTPS443",
                    "properties": {
                        "priority": 1020,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "443"
                    }
                }
              ]
           }
        },
        {
            "condition": "[equals(parameters('virtualNetworkNewOrExisting'), 'new')]",
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2018-11-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": [
                    {
                      "name": "[parameters('subnetName')]",
                      "properties": {
                        "addressPrefix": "[parameters('subnetPrefix')]"
                      }
                    }
                  ]
            }
        },
        {
            "condition": "[equals(parameters('publicIpNewOrExisting'), 'new')]",
            "name": "[parameters('publicIpAddressName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('publicIpDns')]"
				}
            },
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[parameters('image')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                },
				"licenseType": "[if(equals(parameters('windowsLicenseType'), 'no'), 'None', 'Windows_Server')]"
            },     
		   "resources": [
			{
			  "apiVersion": "2018-06-01",
			  "type": "extensions",
			  "name": "config-app",
			  "location": "[parameters('location')]",
			  "dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]",
				"[parameters('virtualMachineName')]"
			  ],
			  "tags": {
				"displayName": "config-app"
			  },
			  "properties": {
				"publisher": "Microsoft.Compute",
				"type": "CustomScriptExtension",
				"typeHandlerVersion": "1.9",
				"autoUpgradeMinorVersion": true,
				"settings": {
				  "fileUris": [
					"[variables('scriptFileUri')]"
				  ]},
				  "protectedSettings": {
				  "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File installation_script.ps1 ','-silentConfigUri ', variables('silentConfigUri'),' -dbServerName ', parameters('dbServerName'),' -databaseName ',parameters('databaseName'),' -dbUserName ',parameters('dbUserName'),' -dbPassword ',parameters('dbPassword'),' -olmServerName ', parameters('olmServerName'),' -olmDatabaseName ',parameters('olmDatabaseName'),' -olmUserName ',parameters('olmUserName'),' -olmPassword ',parameters('olmPassword'))]"
				}            
			  }
			}
		  ]  
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}